{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\n/*[\r\n  {\r\n    cartAvo: {},\r\n    quantity: 5\r\n  },\r\n  {\r\n    cartAvo: {},\r\n    quantity: 3\r\n  }\r\n]*/\n\nvar CartAvosContext = /*#__PURE__*/React.createContext([]);\n\nfunction cartAvosReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      {\n        var _action$payload = action.payload,\n            cartAvo = _action$payload.cartAvo,\n            quantity = _action$payload.quantity;\n        var item = state.cartAvos.find(function (el) {\n          return el.id === cartAvo.id;\n        });\n\n        var newState = _toConsumableArray(state);\n\n        if (item) {\n          //update\n          item.quantity = quantity;\n          var index = newState.findIndex(function (el) {\n            return el.id === cartAvo.id;\n          });\n          newState[index] = item;\n        } else {\n          //add\n          newState.push(action.payload);\n        }\n\n        return newState;\n      }\n  }\n}\n\nexport default CartAvosContext;","map":{"version":3,"sources":["C:/code/avocado-store/contexts/cartAvosContext.ts"],"names":["React","CartAvosContext","createContext","cartAvosReducer","state","action","type","payload","cartAvo","quantity","item","cartAvos","find","el","id","newState","index","findIndex","push"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,IAAMC,eAAe,gBAAGD,KAAK,CAACE,aAAN,CACtB,EADsB,CAAxB;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAqCC,MAArC,EAAkD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AAAY;AACV,8BAA8BD,MAAM,CAACE,OAArC;AAAA,YAAQC,OAAR,mBAAQA,OAAR;AAAA,YAAiBC,QAAjB,mBAAiBA,QAAjB;AACA,YAAMC,IAAI,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB,UAACC,EAAD;AAAA,iBAAkBA,EAAE,CAACC,EAAH,KAAUN,OAAO,CAACM,EAApC;AAAA,SAApB,CAAb;;AACA,YAAMC,QAAQ,sBAAOX,KAAP,CAAd;;AACA,YAAIM,IAAJ,EAAU;AACR;AACAA,UAAAA,IAAI,CAACD,QAAL,GAAgBA,QAAhB;AACA,cAAMO,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAmB,UAACJ,EAAD;AAAA,mBAAkBA,EAAE,CAACC,EAAH,KAAUN,OAAO,CAACM,EAApC;AAAA,WAAnB,CAAd;AACAC,UAAAA,QAAQ,CAACC,KAAD,CAAR,GAAkBN,IAAlB;AACD,SALD,MAKO;AACL;AACAK,UAAAA,QAAQ,CAACG,IAAT,CAAcb,MAAM,CAACE,OAArB;AACD;;AAED,eAAOQ,QAAP;AACD;AAhBH;AAkBD;;AAED,eAAed,eAAf","sourcesContent":["import * as React from 'react'\r\n\r\n/*[\r\n  {\r\n    cartAvo: {},\r\n    quantity: 5\r\n  },\r\n  {\r\n    cartAvo: {},\r\n    quantity: 3\r\n  }\r\n]*/\r\n\r\ninterface CartContextProps {\r\n  cartAvos: TProduct\r\n  quantity: number\r\n}\r\n\r\nconst CartAvosContext = React.createContext<CartContextProps[]>(\r\n  [] as CartContextProps[]\r\n)\r\n\r\nfunction cartAvosReducer(state: any, action: any) {\r\n  switch (action.type) {\r\n    case 'add': {\r\n      const { cartAvo, quantity } = action.payload\r\n      const item = state.cartAvos.find((el: TProduct) => el.id === cartAvo.id)\r\n      const newState = [...state]\r\n      if (item) {\r\n        //update\r\n        item.quantity = quantity\r\n        const index = newState.findIndex((el: TProduct) => el.id === cartAvo.id)\r\n        newState[index] = item\r\n      } else {\r\n        //add\r\n        newState.push(action.payload)\r\n      }\r\n\r\n      return newState\r\n    }\r\n  }\r\n}\r\n\r\nexport default CartAvosContext\r\n"]},"metadata":{},"sourceType":"module"}